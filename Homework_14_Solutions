import math


class Circle:

    def __init__(self, radius):
        self.__radius = radius

    # Overloading the print method for easier testing

    def circle_area(self):
        return math.pi * self.__radius ** 2

    def __str__(self):
        return f"Circle radius: {self.__radius}\nCircle area: {math.pi * self.__radius ** 2}"

    # Checking if the circles are equal
    def __eq__(self, other):
        if isinstance(other, Circle):
            return self.circle_area() == other.circle_area()
        else:
            raise TypeError(f"{type(other)} is not the same as {type(Circle)}.")

    # Less than the other circle
    def __lt__(self, other):
        if isinstance(other, Circle):
            return self.circle_area() < other.circle_area()
        else:
            raise TypeError(f"{type(other)} is not the same as {type(Circle)}.")

    # Greater than the other circle
    def __gt__(self, other):
        if isinstance(other, Circle):
            return self.circle_area() > other.circle_area()
        else:
            raise TypeError(f"{type(other)} is not the same as {type(Circle)}.")

    # Less or equals to the other circle
    def __le__(self, other):
        if isinstance(other, Circle):
            return self.circle_area() <= other.circle_area()
        else:
            raise TypeError(f"{type(other)} is not the same as {type(Circle)}.")

  
